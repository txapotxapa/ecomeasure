(function(){"use strict";self.onmessage=async o=>{const{type:a,imageData:e,options:s}=o.data;try{switch(a){case"ANALYZE_CANOPY":await G(e,s);break;case"ANALYZE_DAUBENMIRE":await w(e,s);break;case"ANALYZE_VEGETATION":await z(e,s);break}}catch(i){self.postMessage({type:"ERROR",error:i instanceof Error?i.message:"Unknown error"})}};async function G(o,a){const{data:e,width:s,height:i}=o;let t=0,n=s*i;self.postMessage({type:"PROGRESS",progress:10,stage:"Analyzing pixels..."});const c=Math.floor(e.length/20);for(let g=0;g<e.length;g+=4){const u=e[g],p=e[g+1],E=e[g+2];if((u+p+E)/3<127&&t++,g%c===0){const d=10+g/e.length*80;self.postMessage({type:"PROGRESS",progress:d,stage:`Processing pixels: ${Math.round(d)}%`})}}const l=t/n*100,r=100-l,f=r,h=-Math.log(r/100)*2;self.postMessage({type:"RESULT",data:{canopyCover:l,gapLight:r,lightTransmission:f,leafAreaIndex:h,pixelsAnalyzed:n,method:a.method}})}async function w(o,a){const{data:e,width:s,height:i}=o;let t=0,n=0,c=0,l=0;self.postMessage({type:"PROGRESS",progress:20,stage:"Classifying ground cover..."});const r=Math.floor(e.length/10);for(let d=0;d<e.length;d+=4){const y=e[d],P=e[d+1],x=e[d+2],[M,R,m]=k(y,P,x);if(A(y,P,x,M,R,m)?t++:I(y,P,x,M,R,m)?n++:L(y,P,x,M,R,m)?c++:v(y,P,x,M,R,m)&&l++,d%r===0){const b=20+d/e.length*60;self.postMessage({type:"PROGRESS",progress:b,stage:`Analyzing coverage: ${Math.round(b)}%`})}}const f=t+n+c+l,h=t/f*100,g=n/f*100,u=c/f*100,p=l/f*100,E=h+g+u+p,S=D([h,g,u,p]);self.postMessage({type:"RESULT",data:{samplingArea:1,totalCoverage:E,speciesDiversity:h>0?1:0,dominantSpecies:h>0?["Mixed Vegetation"]:[],bareGroundPercentage:g,litterPercentage:u,rockPercentage:p,shannonIndex:S,evennessIndex:S/Math.log(4)}})}async function z(o,a){const{data:e,width:s,height:i}=o;let t=0;const n=s*i;for(let r=0;r<e.length;r+=4){const f=e[r],h=e[r+1],g=e[r+2];A(f,h,g)&&t++}const c=t/n*100,l=a.poleHeight*(c/100);self.postMessage({type:"RESULT",data:{direction:a.direction,obstructionHeight:l,vegetationDensity:c}})}function k(o,a,e){o/=255,a/=255,e/=255;const s=Math.max(o,a,e),i=Math.min(o,a,e),t=s-i;let n=0;const c=s===0?0:t/s,l=s;return t!==0&&(s===o?n=(a-e)/t%6:s===a?n=(e-o)/t+2:n=(o-a)/t+4),n=Math.round(n*60),n<0&&(n+=360),[n,c,l]}function A(o,a,e,s,i,t){(s===void 0||i===void 0||t===void 0)&&([s,i,t]=k(o,a,e));const n=(2*a-o-e)/(o+a+e+1),c=a/(o+a+e+1),l=s>=60&&s<=180,r=i>.15,f=t>.2,h=n>.1&&c>.4;return l&&r&&f||h}function I(o,a,e,s,i,t){const n=s>=15&&s<=45||s>=0&&s<=15,c=i<.4,l=t>.2&&t<.8,r=i<.15&&t>.3&&t<.7;return n&&c&&l||r}function L(o,a,e,s,i,t){const n=s>=30&&s<=60&&i>.2&&t>.15&&t<.6,c=i<.3&&t>.1&&t<.4;return n||c}function v(o,a,e,s,i,t){const n=i<.2&&t>.6,c=i<.15&&t>.15&&t<.5;return n||c}function D(o){return-o.filter(e=>e>0).map(e=>e/100).reduce((e,s)=>e+s*Math.log(s),0)}})();
